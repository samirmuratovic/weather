[{"/Users/samirmuratovic/Development/weather/src/App.js":"1","/Users/samirmuratovic/Development/weather/src/index.js":"2","/Users/samirmuratovic/Development/weather/src/utils/forecast.js":"3","/Users/samirmuratovic/Development/weather/src/icons.js":"4","/Users/samirmuratovic/Development/weather/src/Icon.js":"5"},{"size":7462,"mtime":1607617999796,"results":"6","hashOfConfig":"7"},{"size":220,"mtime":1607138648122,"results":"8","hashOfConfig":"7"},{"size":987,"mtime":1607447181058,"results":"9","hashOfConfig":"7"},{"size":89687,"mtime":1607622872591,"results":"10","hashOfConfig":"7"},{"size":836,"mtime":1607617778928,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"z9a3lr",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/samirmuratovic/Development/weather/src/App.js",[],["25","26"],"/Users/samirmuratovic/Development/weather/src/index.js",[],["27","28"],"/Users/samirmuratovic/Development/weather/src/utils/forecast.js",[],"/Users/samirmuratovic/Development/weather/src/icons.js",[],"/Users/samirmuratovic/Development/weather/src/Icon.js",["29"],"import React, { useEffect, useState } from 'react'\nimport icons from './icons'\n\nconst Icon = ({ conditions }) => {\n  const [icon, setIcon] = useState(() => icons[0])\n\n  useEffect(() => {\n    const c = conditions.toLowerCase()\n    if (c.includes('cloud') || c.includes('overcast')) {\n      setIcon(icons[1])\n    } else if (c === 'partly cloudy') {\n      setIcon(icons[2])\n    } else if (c.includes('storm')) {\n      setIcon(icons[4])\n    } else if (c.includes('storm') && c.includes('rain')) {\n      setIcon(icons[6])\n    } else if (\n      c.includes('rain') ||\n      c.includes('drizzle') ||\n      c.includes('mist')\n    ) {\n      setIcon(icons[5])\n    } else if (c.includes('snow') || c.includes('blizzard')) {\n      setIcon(icons[7])\n    } else {\n      setIcon(icons[0])\n    }\n  }, [conditions])\n\n  return icon\n}\n\nexport default Icon\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"30","replacedBy":"34"},{"ruleId":"32","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":8,"nodeType":"38","messageId":"39","endLine":1,"endColumn":13},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],["40"],["41"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]